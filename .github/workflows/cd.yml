name: cd

on:
  pull_request:
  push:
    branches:
    - master
  schedule:
    - cron: '42 01 * * *'

jobs:
  build:
    strategy:
     fail-fast: false
     matrix:
       target:
          - { os: ubuntu-latest, platform: linux-x64 }
          - { os: macos-latest, platform: macos-arm64 }
    runs-on: ${{ matrix.target.os }}
    env:
      PLATFORM: ${{ matrix.target.platform }}
      TREE_SITTER_VERSION: 0.22.6
    steps:
      - uses: actions/checkout@v2
      - name: Build for ${{ matrix.target.platform }}
        run: |
          ./lang d bash c embedded-template html java javascript json python ruby rust
      - name: Prepare git # To get tags from `git describe`
        run: |
          git fetch --prune --unshallow
      - name: Update ref file for latest parsers
        if: ${{ github.event_name == 'schedule' }}
        run: |
          ./update/ref
      - name: Make .deb
        if: matrix.target.os == 'ubuntu-latest'
        run: |
          ./package/deb
      - name: Make zip and tar
        run: |
          ./package/zip
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.vars.outputs.sha_short }}
          name: Release ${{ github.ref }}-${{ steps.vars.outputs.sha_short }}
          draft: true
          files: |
            ./lib/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-fixed-assets:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      DRAFT: ${{ github.event_name == 'schedule' && 'false' || 'true'  }}
      PRE: ${{ github.event_name == 'schedule' && 'true' || 'false'  }}
    steps:
      - uses: actions/checkout@v2
      - name: Prepare git # To get tags from `git describe`
        run: git fetch --prune --unshallow
      - name: "Release {draft: ${{ env.DRAFT }}, pre-release: ${{ env.PRE }} }"
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref }}-${{ steps.vars.outputs.sha_short }}
          draft: ${{ env.DRAFT }}
          prerelease: ${{ env.PRE }}
          files: ref
          tag_name: ${{ steps.vars.outputs.sha_short }}
          make_latest: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
